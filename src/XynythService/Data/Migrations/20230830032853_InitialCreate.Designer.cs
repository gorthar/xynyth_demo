// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using XynythService;

#nullable disable

namespace XynythService.Data.Migrations
{
    [DbContext(typeof(QuoteDbContext))]
    [Migration("20230830032853_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("XynythService.Product", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<Guid>("QuoteId")
                        .HasColumnType("uuid");

                    b.HasKey("id");

                    b.HasIndex("QuoteId")
                        .IsUnique();

                    b.ToTable("Products");
                });

            modelBuilder.Entity("XynythService.Quote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CurrentBidCount")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CurrentBidTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal?>("CurrentHighestBid")
                        .HasColumnType("numeric");

                    b.Property<string>("CurrentHighestBidder")
                        .HasColumnType("text");

                    b.Property<DateTime>("QuoteEndsAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("ReservedPrice")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("SoldAmount")
                        .HasColumnType("numeric");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Winner")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Quotes");
                });

            modelBuilder.Entity("XynythService.Product", b =>
                {
                    b.HasOne("XynythService.Quote", "Quote")
                        .WithOne("Product")
                        .HasForeignKey("XynythService.Product", "QuoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quote");
                });

            modelBuilder.Entity("XynythService.Quote", b =>
                {
                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
